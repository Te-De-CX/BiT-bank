# Generated by Django 5.1.4 on 2025-05-03 19:21

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('prize_description', models.TextField()),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('min_savings_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('reward_type', models.CharField(choices=[('POINTS', 'Points'), ('CASHBACK', 'Cashback'), ('MILES', 'Miles')], max_length=20)),
                ('description', models.TextField()),
                ('points_ratio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('current_savings', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('is_winner', models.BooleanField(default=False)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='savings.competition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SavingsAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('REGULAR', 'Regular Savings'), ('HIGH_YIELD', 'High-Yield Savings'), ('CERTIFICATE', 'Certificate of Deposit')], default='REGULAR', max_length=20)),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('minimum_balance', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('compounding_frequency', models.CharField(default='MONTHLY', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('opened_date', models.DateTimeField(auto_now_add=True)),
                ('maturity_date', models.DateTimeField(blank=True, null=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='savings_account', to='accounts.account')),
            ],
        ),
        migrations.CreateModel(
            name='UserReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='savings.reward')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
